//
//  main.swift
//  5
//
//  Created by Sergey Abrosov on 22.03.2024.
//

import Foundation

// Анимации в iOS

// Интерполяция

//func interpolate<T: Numeric>(from: T, to: T, factor: T) -> Double {
//    return from + (to - from) * coef
//}
//
//let factor = (current - start) / animationDuration

// Интерполяция:
// 1) Линейная
// 2) Эрмитова
// 3) Ease In - быстрое начало медленный конец
// 4) Ease Out - медленное начало быстрый конец

// Как работают анимации
// Render Server - надстройка над GPU этот процесс занимается рендерингом
// Render Server - использует таймер привязанный к частоте экрана

// Сам процесс
// Layout - первый этап (верхнеуровневые штуки) - идет рассчет
// Display - drawRect + Coregraphics + рисуются строки
// Prepare - декодирован7ие изобрпжения + конвертация в юолее удобный для ПPU формат
// Commit - рекурсивный обход который собирает бинарник с описанием того где что будет находиться и пересылает в
// Render Server

// Анимировать можно фрейм баундс альфа трансформ бекграунд колор

// uiview.animate:
// пробрема в том что мы не имеем доступа к изменению процесса анимации

// uiview.animateKeyFrames: - можно указывать порядок анимации

// UIViewPropertyAnimator - позволяет стопорнуть анимацию:
// позволяет запускать / останавливать анимацию + запускать анимацию в обратном порядке + выставлять процент завер
// шенности + управлять скоростью анимации

// UIKit - слушает пользователя
// coreAnimation - отрисовывает
// кор анимейшн обертка над метал и опен гл
// и это все обертка над GPU (графическая карта)

// CALayer

// CAAnimationGroup - позволяет и синхронизировать несколько анимаций
